/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Mohsin
 */
public class license_info extends javax.swing.JFrame {

    /**
     * Creates new form license_info
     */
    public license_info() {
        initComponents();
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        scrol = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        ok = new javax.swing.JButton();

        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(252, 126, 1));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(252, 126, 1));
        jLabel1.setText("Software License Agreement");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, -1, 26));

        scrol.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                scrolMouseDragged(evt);
            }
        });
        scrol.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                scrolFocusLost(evt);
            }
        });
        scrol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                scrolMouseReleased(evt);
            }
        });
        scrol.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                scrolKeyPressed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("\nSecuTime HRM (SOFTWARE) - a time attendance and payroll management software developed by M/s. Unique Technologies. (LICENSOR) - is offered to the purchaser (CUSTOMER) on the following terms and conditions, which the purchaser shall be deemed to have accepted in full upon opening and installing the SOFTWARE.\n\n1. The LICENSOR is the owner of copyright and all other intellectual property rights in the SOFTWARE.\n\n2. The LICENSOR grants to the CUSTOMER, a non-exclusive license to use the SOFTWARE, upon the terms and conditions contained hereinafter.\n\n3. The CUSTOMER, by opening and installing this package, is deemed to have read, understood and agreed to be bound by the terms of this Agreement.  It is also agreed that this agreement is the complete and exclusive statement of agreement between the CUSTOMER and the LICENSOR.\n\n4. The CUSTOMER shall not decompile, disassemble or otherwise modify the SOFTWARE, except as provided for by this license.\n\n5. The CUSTOMER is solely responsible for determining the suitability of the SOFTWARE for the purpose it is intended to be used, before the purchase of the SOFTWARE.  Once the CUSTOMER purchases the SOFTWARE, the LICENSOR will not accept return of SOFTWARE under any circumstances, whatsoever, and the payment once made shall be non-refundable.\n\n6. The LICENSOR does not extend and expressly disclaims any warranty, whatsoever, as to the suitability, applicability, fitness, merchantability or otherwise of the SOFTWARE and related items.\n\n7. The CUSTOMER shall take all reasonable precautions and measures to protect the SOFTWARE and related items from unauthorized use, access, copying, modifications, reproduction, distribution or publication.\n\n8. The price of the SOFTWARE is the license fee for use of the SOFTWARE only.  All services like Installation, Training, Support etc. are chargeable extra.\n\n9. Upgrades, enhancements, additions and improved versions of the SOFTWARE shall be available to the CUSTOMER upon payment of additional license fee / price, as per the policy of the LICENSOR, as may be prevalent from time to time.\n\n10. After a new version is released, all further development / debugging will be carried out on the new version only, which may be subject to acceptance of further terms and conditions between the parties.\n\n11. The LICENSOR does not guarantee the compatibility of the SOFTWARE with future Operating Systems or Technologies.\n\n12. The LICENSOR shall not take any responsibility for any kind of corruption of data at the CUSTOMER site due to media failure / power failure / hardware problem / virus infection or any other reason.  At most, the LICENSOR can try to recover the data either fully or partially and the same shall be chargeable.\n\n13. It is expressly agreed by the CUSTOMER that neither the manufacturer nor the supplier of the SOFTWARE shall be liable for any loss or damage, whether direct, indirect, special, consequential and / or incidental, arising from the use or application of the SOFTWARE and related items.\n\n14. The Statutory Reports provided in the SOFTWARE are intended to provide the information / data to the CUSTOMER. The LICENSOR does not guarantee, promise or claim accuracy, completeness or adequacy of the information provided and makes no claim that the Statutory Reports provided in the SOFTWARE will be accepted by the tax authorities as it is.  The LICENSOR shall not be responsible for any error / omission or delay in fulfilling of statutory obligations by the CUSTOMER.  In case there is any change in statutory requirement, the LICENSOR shall try to incorporate the same in the forthcoming releases of the SOFTWARE, but, shall be under no obligation to do so.\n\n15. The parties hereby agree that the courts at Karachi alone shall have the jurisdiction to entertain any proceedings in respect of anything arising under this agreement.\n");
        scrol.setViewportView(jTextArea1);

        jPanel1.add(scrol, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 700, 480));

        jScrollPane3.setViewportView(jTextPane1);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, -1, -1));

        ok.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ok-icon.png"))); // NOI18N
        ok.setText("OK");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });
        jPanel1.add(ok, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 560, 70, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 745, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(745, 600));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void scrolMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scrolMouseDragged
       ok.setEnabled(true);
    }//GEN-LAST:event_scrolMouseDragged

    private void scrolMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scrolMouseReleased
         ok.setEnabled(true);
    }//GEN-LAST:event_scrolMouseReleased

    private void scrolFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_scrolFocusLost
    ok.setEnabled(true);
    }//GEN-LAST:event_scrolFocusLost

    private void scrolKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_scrolKeyPressed
      ok.setEnabled(true);
    }//GEN-LAST:event_scrolKeyPressed

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
this.setVisible(false);
    }//GEN-LAST:event_okActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(license_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(license_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(license_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(license_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new license_info().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JButton ok;
    private javax.swing.JScrollPane scrol;
    // End of variables declaration//GEN-END:variables
}
